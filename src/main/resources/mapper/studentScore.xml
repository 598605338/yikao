<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linjia.web.dao.StudentScoreMapper" >
  <resultMap id="BaseResultMap" type="com.linjia.web.model.StudentScore" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="candidate_num" property="candidateNum" jdbcType="BIGINT" />
    <result column="candidate_name" property="candidateName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    <result column="specialty_name" property="specialtyName" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, candidate_num, candidate_name, sex, college_name, specialty_name, score
  </sql>
  <select id="selectBySerach" resultMap="BaseResultMap" parameterType="com.linjia.web.query.StudentScoreQuery" >
    select
    t.*
    ,(SELECT count(*)+1 FROM (
    SELECT t1.score FROM t_student_score t1
    where 1=1
    <if test="collegeName != null and collegeName !=''">
      AND t1.college_name LIKE concat("%",#{collegeName,jdbcType=VARCHAR},"%")
    </if>
    <if test="specialtyName != null and specialtyName !=''">
      AND t1.specialty_name LIKE concat("%",#{specialtyName,jdbcType=VARCHAR},"%")
    </if>
    group by t1.score) t2
    where t2.score > t.score  ) AS rank
    from t_student_score t
    where 1=1
    <if test="candidateNum != null and candidateNum !=0">
      AND candidate_num = #{candidateNum,jdbcType=BIGINT}
    </if>
    <if test="candidateName != null and candidateName !=''">
      AND candidate_name LIKE concat("%",#{candidateName,jdbcType=VARCHAR},"%")
    </if>
    <if test="collegeName != null and collegeName !=''">
      AND college_name LIKE concat("%",#{collegeName,jdbcType=VARCHAR},"%")
    </if>
    <if test="specialtyName != null and specialtyName !=''">
      AND specialty_name LIKE concat("%",#{specialtyName,jdbcType=VARCHAR},"%")
    </if>
    order BY  rank
    limit #{startIndex},#{pageSize}
  </select>

  <insert id="insertSelective" parameterType="com.linjia.web.model.StudentScore" keyProperty="id" useGeneratedKeys="true">
    insert into t_student_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="candidateNum != null" >
        candidate_num,
      </if>
      <if test="candidateName != null" >
        candidate_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="collegeName != null" >
        college_name,
      </if>
      <if test="specialtyName != null" >
        specialty_name,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="candidateNum != null" >
        #{candidateNum,jdbcType=BIGINT},
      </if>
      <if test="candidateName != null" >
        #{candidateName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="collegeName != null" >
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="specialtyName != null" >
        #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>

  <insert id="insertBatch" parameterType="list" >
    insert into t_student_score_temp
        (candidate_num,
        candidate_name,
        sex,
        college_name,
        specialty_name,
        score)
        VALUES
        <foreach collection="list" item="item" separator=",">
          (#{item.candidateNum,jdbcType=BIGINT},
          #{item.candidateName,jdbcType=VARCHAR},
          #{item.sex,jdbcType=INTEGER},
          #{item.collegeName,jdbcType=VARCHAR},
          #{item.specialtyName,jdbcType=VARCHAR},
          #{item.score,jdbcType=DECIMAL}
          )
        </foreach>
  </insert>

  <select id="countByExample" parameterType="com.linjia.web.query.CollegeQuery" resultType="java.lang.Integer" >
    select count(*) from t_student_score
    where 1=1
    <if test="candidateNum != null and candidateNum !=0">
      AND candidate_num = #{candidateNum,jdbcType=BIGINT}
    </if>
    <if test="candidateName != null and candidateName !=''">
      AND candidate_name LIKE concat("%",#{candidateName,jdbcType=VARCHAR},"%")
    </if>
    <if test="collegeName != null and collegeName !=''">
      AND college_name LIKE concat("%",#{collegeName,jdbcType=VARCHAR},"%")
    </if>
    <if test="specialtyName != null and specialtyName !=''">
      AND specialty_name LIKE concat("%",#{specialtyName,jdbcType=VARCHAR},"%")
    </if>
  </select>

  <select id="checkSameData" parameterType="com.linjia.web.query.CollegeQuery" resultType="java.lang.Integer" >
    select count(*) from t_student_score where candidate_num = #{candidateNum,jdbcType=BIGINT} AND college_name = #{collegeName,jdbcType=VARCHAR} AND specialty_name = #{specialtyName,jdbcType=VARCHAR}
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.linjia.web.model.College" >
    update t_college
    <set>
      <if test="collegeName != null" >
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=SMALLINT},
      </if>
      <if test="provinceName != null" >
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=SMALLINT},
      </if>
      <if test="cityName != null" >
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=SMALLINT},
      </if>
      <if test="countyName != null" >
        county_name = #{countyName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="containSpecialtyIds != null" >
        contain_specialty_ids = #{containSpecialtyIds,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linjia.web.model.College" >
    update t_college
    set college_name = #{collegeName,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=SMALLINT},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=SMALLINT},
      city_name = #{cityName,jdbcType=VARCHAR},
      county_id = #{countyId,jdbcType=SMALLINT},
      county_name = #{countyName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      contain_specialty_ids = #{containSpecialtyIds,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="createImportTemp" parameterType="java.lang.String" >
    ${sql}
  </update>

  <select id="callProcImportInfo"  statementType="CALLABLE" >
    CALL test.proc_import_student_score()
  </select>
</mapper>