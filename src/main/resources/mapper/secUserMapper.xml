<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linjia.web.dao.SecUserMapper" >
  <resultMap id="BaseResultMap" type="com.linjia.web.model.SecUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="login" property="login" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mall_code" property="mallCode" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="cre_date" property="creDate" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, level, login, password, name, mall_code, phone, deleted, cre_date, creator, update_date, updater
  </sql>
  <select id="selectByPageList" resultMap="BaseResultMap" parameterType="com.linjia.web.query.SecUserQuery" >
    select
    <include refid="Base_Column_List" />
    from m_sec_user
    where 1=1
    <if test="loginQuery != null and loginQuery !=''" >
       and login like #{loginQuery,jdbcType=VARCHAR}
    </if>
    <if test="nameQuery != null and nameQuery !=''" >
       and name like #{nameQuery,jdbcType=VARCHAR}
    </if>
    <if test="phoneQuery != null and phoneQuery !=''" >
       and phone like #{phoneQuery,jdbcType=VARCHAR}
    </if>
    <if test="level != null" >
       and level = #{level,jdbcType=INTEGER}
    </if>
    order by id 
    limit #{startIndex},#{pageSize}
  </select>
  
  <select id="countByExample" resultType="java.lang.Integer" parameterType="com.linjia.web.query.SecUserQuery" >
    select
    count(id)
    from m_sec_user
    where 1=1
    <if test="loginQuery != null and loginQuery !=''" >
       and login like #{loginQuery,jdbcType=VARCHAR}
    </if>
    <if test="nameQuery != null and nameQuery !=''" >
       and name like #{nameQuery,jdbcType=VARCHAR}
    </if>
    <if test="phoneQuery != null and phoneQuery !=''" >
       and phone like #{phoneQuery,jdbcType=VARCHAR}
    </if>
    <if test="level != null" >
       and level = #{level,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_sec_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByLogin" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from m_sec_user
    where login = #{login,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    update m_sec_user set deleted =1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.linjia.web.model.SecUser" useGeneratedKeys="true" keyProperty="id" >
    insert into m_sec_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        login,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="mallCode != null" >
        mall_code,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="creDate != null" >
        cre_date,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updater != null" >
        updater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="login != null" >
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="mallCode != null" >
        #{mallCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="creDate != null" >
        #{creDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.linjia.web.model.SecUser" >
    update m_sec_user
    <set >
      <if test="password != null and password !=''" >
        password =  #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="login != null" >
        login = #{login,jdbcType=VARCHAR},
      </if>
      <if test="mallCode != null" >
        mall_code =  #{mallCode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
    </set>
   	where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 删除用户所选角色 -->
  <delete id="deleteUserRoleByUserId" parameterType="java.lang.Integer" >
    delete from m_user_role 
    where sec_user_id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 查询用户所选角色 -->
  <select id="selectUserRoleByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select sec_role_id from m_user_role 
    where deleted =0 and sec_user_id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 插入用户所选角色 -->
  <insert id="insertUserRoleBatch" parameterType="map" >
    insert into m_user_role
        (sec_role_id,
        sec_user_id,
        cre_date,
        creator,
        update_date,
        updater)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item,jdbcType=INTEGER},
        #{secUserId,jdbcType=INTEGER},
        #{creDate,jdbcType=TIMESTAMP},
        #{creator,jdbcType=VARCHAR},
        #{updateDate,jdbcType=TIMESTAMP},
        #{updater,jdbcType=VARCHAR}
        )
        </foreach>
  </insert>
</mapper>