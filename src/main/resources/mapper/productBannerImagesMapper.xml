<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linjia.web.dao.ProductBannerImagesMapper" >
  <resultMap id="BaseResultMap" type="com.linjia.web.model.ProductBannerImages" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="image_index" property="imageIndex" jdbcType="INTEGER" />
    <result column="is_first" property="isFirst" jdbcType="BIT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, path, image_index, is_first, deleted
  </sql>
  <select id="selectAllByProductId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,CONCAT('${@com.linjia.constants.Application@SERVER_BASE_PATH}',path) AS path
    from b_product_banner_images
    where product_id = #{product_id,jdbcType=INTEGER}
    order by is_first DESC,image_index DESC
  </select>
  
  <!-- 批量批量插入商品轮播图 -->
  <insert id="insertBatchProductBannerImageList" parameterType="map" >
    insert into b_product_banner_images
        (product_id,
        path,
        image_index)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (
        #{productId,jdbcType=BIGINT},
        #{item,jdbcType=VARCHAR},
        #{index}
        )
        </foreach>
  </insert>
  
  <!-- 批量批量插入商品轮播图 -->
  <insert id="insertProductBannerImage" parameterType="map" >
    insert into b_product_banner_images
        (product_id,
        path,
        image_index)
        values
        (
        #{productId,jdbcType=BIGINT},
        #{path,jdbcType=VARCHAR},
        3
        )
  </insert>
  
  <!-- update商品轮播图 -->
  <update id="updateProductBannerImageById" parameterType="map" >
    update b_product_banner_images
    set path = #{path,jdbcType=VARCHAR}
    where id = #{bannerImageId,jdbcType=BIGINT}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!-- delete from b_product
    where id = #{id,jdbcType=INTEGER} -->
    delete from b_product_banner_images where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByProductId" parameterType="java.lang.Integer" >
    delete from b_product_banner_images where product_id = #{productId,jdbcType=BIGINT}
  </delete>
</mapper>