<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="com.linjia.web.dao.AdvertisePageMapper">
	<!-- 缓存 -->  
   <!--  <cache eviction="LRU" type="com.linjia.core.feature.cache.MybatisRedisCache" />  -->
    
	<insert id="insertAdvPage" parameterType="com.linjia.web.model.AdvitisePage" useGeneratedKeys="true" keyProperty="id">
		insert into b_advitise_page(page_name,page_type,create_time) 
		values(#{page_name},#{page_type},SYSDATE())
	</insert>
	
	<update id="updateAdvPageById" parameterType="com.linjia.web.model.AdvitisePage">
		update b_advitise_page 
		<set>
			<if test="page_name !=null">
				page_name=#{page_name},
			</if>
			<if test="page_type !=null">
				page_type=#{page_type},
			</if>
			<if test="page_link !=null">
				page_link=#{page_link},
			</if>
			<if test="deleted !=null">
				deleted=#{deleted},
			</if>
			update_time=SYSDATE()
		</set>
		where id=#{id}
	</update>
	
	<delete id="deleteAdvPageById" parameterType="int">
		delete from b_advitise_page where id=#{id}
	</delete>
	
	 <!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->  
	<select id="selectAdvPageById" parameterType="int" resultType="com.linjia.web.model.AdvitisePage">
		select id,page_name,page_type,page_link,create_time,update_time,deleted  from b_advitise_page where id=#{id}
	</select>
	
	<select id="selectAdvPageAll" resultType="com.linjia.web.model.AdvitisePage">
		select id,page_name,page_type,page_link,create_time,update_time,deleted from b_advitise_page
	</select>
	
</mapper>