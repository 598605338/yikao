<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linjia.web.dao.AdmissionInfoMapper" >
  <resultMap id="BaseResultMap" type="com.linjia.web.model.AdmissionInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="specialty_id" property="specialtyId" jdbcType="INTEGER" />
    <result column="batch_id" property="batchId" jdbcType="INTEGER" />
    <result column="college_name" property="collegeName" jdbcType="VARCHAR" />
    <result column="specialty_name" property="specialtyName" jdbcType="VARCHAR" />
    <result column="batch_name" property="batchName" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="admission_num" property="admissionNum" jdbcType="INTEGER" />
    <result column="high_score" property="highScore" jdbcType="DOUBLE" />
    <result column="low_score" property="lowScore" jdbcType="DOUBLE" />
    <result column="average_score" property="averageScore" jdbcType="DOUBLE" />
    <result column="admission_rule_id" property="admissionRuleId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    t.id, t.college_id, t.specialty_id, t.batch_id, t.year, t.type, t.admission_num, t.high_score, t.low_score,
    t.average_score, t.admission_rule_id,t.college_name,t.specialty_name,t.batch_name
  </sql>
  <select id="selectBySerach" resultMap="BaseResultMap" parameterType="com.linjia.web.query.AdmissionInfoQuery" >
    select
    <include refid="Base_Column_List" />
    ,(SELECT description FROM `t_admission_rule` where id = t.admission_rule_id) AS description
    from t_admission_info t
    ORDER BY college_id,specialty_id,year desc,batch_id
    LIMIT #{startIndex},#{pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_admission_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_admission_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.linjia.web.model.AdmissionInfo" >
    insert into t_admission_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="specialtyId != null" >
        specialty_id,
      </if>
      <if test="batchId != null" >
        batch_id,
      </if>
      <if test="collegeName != null" >
        college_name,
      </if>
      <if test="specialtyName != null" >
        specialty_name,
      </if>
      <if test="batchName != null" >
        batch_name,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="admissionNum != null" >
        admission_num,
      </if>
      <if test="highScore != null" >
        high_score,
      </if>
      <if test="lowScore != null" >
        low_score,
      </if>
      <if test="averageScore != null" >
        average_score,
      </if>
      <if test="admissionRuleId != null" >
        admission_rule_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="specialtyId != null" >
        #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="batchId != null" >
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="collegeName != null" >
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="specialtyName != null" >
        #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="batchName != null" >
        #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="admissionNum != null" >
        #{admissionNum,jdbcType=INTEGER},
      </if>
      <if test="highScore != null" >
        #{highScore,jdbcType=INTEGER},
      </if>
      <if test="lowScore != null" >
        #{lowScore,jdbcType=INTEGER},
      </if>
      <if test="averageScore != null" >
        #{averageScore,jdbcType=INTEGER},
      </if>
      <if test="admissionRuleId != null" >
        #{admissionRuleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linjia.web.query.AdmissionInfoQuery" resultType="java.lang.Integer" >
    select count(*) from t_admission_info
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.linjia.web.model.AdmissionInfo" >
    update t_admission_info
    <set >
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="specialtyId != null" >
        specialty_id = #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="batchId != null" >
        batch_id = #{batchId,jdbcType=INTEGER},
      </if>
      <if test="collegeName != null" >
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="specialtyName != null" >
        specialty_name = #{specialtyName,jdbcType=VARCHAR},
      </if>
      <if test="batchName != null" >
        batch_name = #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="admissionNum != null" >
        admission_num = #{admissionNum,jdbcType=INTEGER},
      </if>
      <if test="highScore != null" >
        high_score = #{highScore,jdbcType=REAL},
      </if>
      <if test="lowScore != null" >
        low_score = #{lowScore,jdbcType=REAL},
      </if>
      <if test="averageScore != null" >
        average_score = #{averageScore,jdbcType=REAL},
      </if>
      <if test="admissionRuleId != null" >
        admission_rule_id = #{admissionRuleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linjia.web.model.AdmissionInfo" >
    update t_admission_info
    set college_id = #{collegeId,jdbcType=INTEGER},
      specialty_id = #{specialtyId,jdbcType=INTEGER},
      batch_id = #{batchId,jdbcType=INTEGER},
      college_name = #{collegeName,jdbcType=VARCHAR},
      specialty_name = #{specialtyName,jdbcType=VARCHAR},
      batch_name = #{batchName,jdbcType=VARCHAR},
      year = #{year,jdbcType=SMALLINT},
      type = #{type,jdbcType=BIT},
      admission_num = #{admissionNum,jdbcType=INTEGER},
      high_score = #{highScore,jdbcType=REAL},
      low_score = #{lowScore,jdbcType=REAL},
      average_score = #{averageScore,jdbcType=REAL},
      admission_rule_id = #{admissionRuleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>