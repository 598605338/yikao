<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linjia.web.dao.PrivilegeMapper" >
  <resultMap id="BaseResultMap" type="com.linjia.web.model.Privilege" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="access_type" property="accessType" jdbcType="INTEGER" />
    <result column="access_value" property="accessValue" jdbcType="INTEGER" />
    <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="operation" property="operation" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="cre_date" property="creDate" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, access_type, access_value, resource_id, operation, comment, deleted, cre_date, 
    creator, update_date, updater
  </sql>
  <select id="selectPrivilegeIdByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select
    privilege_id
    FROM m_role_privilege
	WHERE deleted =0 AND role_id = #{roleId,jdbcType=INTEGER}
    order by id
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_privilege
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 删除该角色的所有权限  -->
  <delete id="deleteByRoleId" parameterType="java.lang.Integer" >
    delete from m_role_privilege
    where 1=1 and role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量插入确认下单中购买的商品数据 -->
  <insert id="insertBatchRolePrivilegeList" parameterType="map" >
    insert into m_role_privilege
        (role_id,
        privilege_id,
        cre_date,
        creator,
        update_date,
        updater)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (
        #{roleId,jdbcType=INTEGER},
        #{item,jdbcType=INTEGER},
        #{creDate,jdbcType=TIMESTAMP},
        #{creator,jdbcType=VARCHAR},
        #{updateDate,jdbcType=TIMESTAMP},
        #{updater,jdbcType=VARCHAR}
        )
        </foreach>
  </insert>
</mapper>