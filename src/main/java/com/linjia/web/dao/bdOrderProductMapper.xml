<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.linjia.web.dao.BdOrderProductMapper">
	<!-- 缓存 -->
	<!-- <cache eviction="LRU" type="com.linjia.core.feature.cache.MybatisRedisCache" 
		/> -->

	<resultMap id="BdProductResultMap" type="com.linjia.web.model.ThirdOrderProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="orderId" property="orderId" jdbcType="BIGINT" />
		<result column="product_id" property="pCode" jdbcType="VARCHAR" />
		<result column="product_name" property="pName" jdbcType="VARCHAR" />
		<result column="product_amount" property="quantity" jdbcType="INTEGER" />
		<result column="total_fee" property="itemPrice" jdbcType="DECIMAL" />
		<result column="image_path" property="imagePath" jdbcType="VARCHAR" />
	</resultMap>

	<insert id="insertBdOrderProduct" parameterType="com.linjia.web.thirdService.baidu.model.Product"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		b_baidu_order_product(product_id,orderId,product_name,product_price,product_amount,product_fee,package_price,package_amount,package_fee,total_fee)
		values(#{product_id},#{orderId},#{product_name},#{product_price},#{product_amount},#{product_fee},#{package_price},#{package_amount},#{package_fee},#{total_fee})
	</insert>

	<delete id="deleteBdOrderProduct" parameterType="java.lang.String">
		delete
		b_baidu_order_product
		where 1=1 and id=#{id}
	</delete>

	<update id="updateBdOrderProduct" parameterType="com.linjia.web.thirdService.baidu.model.Product">
		update
		b_baidu_order_product
		where 1=1 and id=#{id} and orderId=#{orderId}
	</update>

	<!-- 根据订单Id查询订单详情 -->
	<select id="selectBdOrderProduct" parameterType="java.lang.Long"
		resultMap="BdProductResultMap">
		select
			bop.id,
			bop.orderId,
			bp.p_code,
			bop.product_name,
			bop.product_amount,
			ROUND(bop.total_fee/100,2) total_fee,
			CONCAT('${@com.linjia.constants.Application@SERVER_BASE_PATH}',bp.image_path) image_path
			from b_baidu_order_product bop left join b_product bp
		on bop.product_id=bp.p_code where bop.orderId=#{orderId}
	</select>
	
	<!-- 根据订单Id查询订单详情 -->
	<select id="selectBdOrderProductAll" parameterType="java.lang.Long"
		resultType="com.linjia.web.thirdService.baidu.model.Product">
		select
			id,
			product_id,
			orderId,
			product_name,
			product_price,
			product_amount,
			product_fee,
			package_price,
			package_amount,
			package_fee,
			total_fee
			from b_baidu_order_product
		where orderId=#{orderId}
	</select>

</mapper>