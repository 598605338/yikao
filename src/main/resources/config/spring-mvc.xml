<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描通过注解配置的controller组件（此处应该只扫描controller,否则会引起事务失效） -->
	<!-- 注意：此处只应该加载表现层组件，如果此处还加载dao层或service层的bean会将之前容器加载的替换掉，而且此处不会进行AOP织入，所以会造成AOP失效问题（如事务不起作用） -->
	<context:component-scan base-package="com.linjia.web.controller">
		<!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
			use-default-filters="false" -->
	</context:component-scan>

	<!-- 开启注解 -->
	<!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean,是spring MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven />

	<!-- 验证用户是否登陆 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/doLogin" />
			<mvc:exclude-mapping path="/validateCode" />
			<bean class="com.linjia.web.interceptors.LoginInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.linjia.web.interceptors.CrossDomainInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean> 


	<!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 支持返回json -->

	<!-- 静态资源不进行拦截（js/css/image的访问） -->
	<mvc:resources location="/dist/" mapping="/dist/**" />
	<!-- 可以直接访问html文件 -->
	<mvc:default-servlet-handler/>  

	<!-- 对模型视图添加前后缀 -->
	<bean id="indexViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="com.linjia.web.interceptors.LoginViewResolver"/>
		<property name="order" value="0" />  
        <property name="prefix" value="/"/>  
        <property name="suffix" value=".jsp" />    
        <property name="contentType" value="text/html;charset=UTF-8"></property>   
		</bean>
		
	<!-- 对模型视图添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" /> 
		<property name="prefix" value="/jsp/views/"/>  
        <property name="suffix" value=".jsp" />  
		</bean>
		

	<!-- 配置springMVC处理上传文件的信息 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>
</beans>